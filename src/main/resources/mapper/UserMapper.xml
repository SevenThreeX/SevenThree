<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seventhree.st.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.seventhree.st.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="referer" jdbcType="INTEGER" property="referer" />
    <result column="pay_password" jdbcType="VARCHAR" property="payPassword" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="mail_num" jdbcType="VARCHAR" property="mailNum" />
    <result column="IDcard_urlA" jdbcType="VARCHAR" property="idcardUrla" />
    <result column="IDcard_urlB" jdbcType="VARCHAR" property="idcardUrlb" />
    <result column="wallet_eth_address" jdbcType="VARCHAR" property="walletEthAddress" />
    <result column="wallet_eth_privatekey" jdbcType="VARCHAR" property="walletEthPrivatekey" />
    <result column="wallet_btc_address" jdbcType="VARCHAR" property="walletBtcAddress" />
    <result column="wallet_btc_privateKey" jdbcType="VARCHAR" property="walletBtcPrivatekey" />
    <result column="wallet_eos_address" jdbcType="VARCHAR" property="walletEosAddress" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, pass_word, phone, sex, avatar, nick_name, referer, pay_password, 
    pic_url, mail_num, IDcard_urlA, IDcard_urlB, wallet_eth_address, wallet_eth_privatekey, 
    wallet_btc_address, wallet_btc_privateKey, wallet_eos_address, flag, status, create_date
  </sql>
  <select id="selectByExample" parameterType="com.seventhree.st.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cbt_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cbt_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cbt_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.seventhree.st.model.UserExample">
    delete from cbt_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.seventhree.st.model.User">
    insert into cbt_user (user_id, user_name, pass_word, 
      phone, sex, avatar, 
      nick_name, referer, pay_password, 
      pic_url, mail_num, IDcard_urlA, 
      IDcard_urlB, wallet_eth_address, wallet_eth_privatekey, 
      wallet_btc_address, wallet_btc_privateKey, 
      wallet_eos_address, flag, status, 
      create_date)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{referer,jdbcType=INTEGER}, #{payPassword,jdbcType=VARCHAR}, 
      #{picUrl,jdbcType=VARCHAR}, #{mailNum,jdbcType=VARCHAR}, #{idcardUrla,jdbcType=VARCHAR}, 
      #{idcardUrlb,jdbcType=VARCHAR}, #{walletEthAddress,jdbcType=VARCHAR}, #{walletEthPrivatekey,jdbcType=VARCHAR}, 
      #{walletBtcAddress,jdbcType=VARCHAR}, #{walletBtcPrivatekey,jdbcType=VARCHAR}, 
      #{walletEosAddress,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.seventhree.st.model.User">
    insert into cbt_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="passWord != null">
        pass_word,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="referer != null">
        referer,
      </if>
      <if test="payPassword != null">
        pay_password,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="mailNum != null">
        mail_num,
      </if>
      <if test="idcardUrla != null">
        IDcard_urlA,
      </if>
      <if test="idcardUrlb != null">
        IDcard_urlB,
      </if>
      <if test="walletEthAddress != null">
        wallet_eth_address,
      </if>
      <if test="walletEthPrivatekey != null">
        wallet_eth_privatekey,
      </if>
      <if test="walletBtcAddress != null">
        wallet_btc_address,
      </if>
      <if test="walletBtcPrivatekey != null">
        wallet_btc_privateKey,
      </if>
      <if test="walletEosAddress != null">
        wallet_eos_address,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="referer != null">
        #{referer,jdbcType=INTEGER},
      </if>
      <if test="payPassword != null">
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="mailNum != null">
        #{mailNum,jdbcType=VARCHAR},
      </if>
      <if test="idcardUrla != null">
        #{idcardUrla,jdbcType=VARCHAR},
      </if>
      <if test="idcardUrlb != null">
        #{idcardUrlb,jdbcType=VARCHAR},
      </if>
      <if test="walletEthAddress != null">
        #{walletEthAddress,jdbcType=VARCHAR},
      </if>
      <if test="walletEthPrivatekey != null">
        #{walletEthPrivatekey,jdbcType=VARCHAR},
      </if>
      <if test="walletBtcAddress != null">
        #{walletBtcAddress,jdbcType=VARCHAR},
      </if>
      <if test="walletBtcPrivatekey != null">
        #{walletBtcPrivatekey,jdbcType=VARCHAR},
      </if>
      <if test="walletEosAddress != null">
        #{walletEosAddress,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.seventhree.st.model.UserExample" resultType="java.lang.Long">
    select count(*) from cbt_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cbt_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.passWord != null">
        pass_word = #{record.passWord,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.referer != null">
        referer = #{record.referer,jdbcType=INTEGER},
      </if>
      <if test="record.payPassword != null">
        pay_password = #{record.payPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.picUrl != null">
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.mailNum != null">
        mail_num = #{record.mailNum,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardUrla != null">
        IDcard_urlA = #{record.idcardUrla,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardUrlb != null">
        IDcard_urlB = #{record.idcardUrlb,jdbcType=VARCHAR},
      </if>
      <if test="record.walletEthAddress != null">
        wallet_eth_address = #{record.walletEthAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.walletEthPrivatekey != null">
        wallet_eth_privatekey = #{record.walletEthPrivatekey,jdbcType=VARCHAR},
      </if>
      <if test="record.walletBtcAddress != null">
        wallet_btc_address = #{record.walletBtcAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.walletBtcPrivatekey != null">
        wallet_btc_privateKey = #{record.walletBtcPrivatekey,jdbcType=VARCHAR},
      </if>
      <if test="record.walletEosAddress != null">
        wallet_eos_address = #{record.walletEosAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cbt_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      pass_word = #{record.passWord,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      referer = #{record.referer,jdbcType=INTEGER},
      pay_password = #{record.payPassword,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      mail_num = #{record.mailNum,jdbcType=VARCHAR},
      IDcard_urlA = #{record.idcardUrla,jdbcType=VARCHAR},
      IDcard_urlB = #{record.idcardUrlb,jdbcType=VARCHAR},
      wallet_eth_address = #{record.walletEthAddress,jdbcType=VARCHAR},
      wallet_eth_privatekey = #{record.walletEthPrivatekey,jdbcType=VARCHAR},
      wallet_btc_address = #{record.walletBtcAddress,jdbcType=VARCHAR},
      wallet_btc_privateKey = #{record.walletBtcPrivatekey,jdbcType=VARCHAR},
      wallet_eos_address = #{record.walletEosAddress,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.seventhree.st.model.User">
    update cbt_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        pass_word = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="referer != null">
        referer = #{referer,jdbcType=INTEGER},
      </if>
      <if test="payPassword != null">
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="mailNum != null">
        mail_num = #{mailNum,jdbcType=VARCHAR},
      </if>
      <if test="idcardUrla != null">
        IDcard_urlA = #{idcardUrla,jdbcType=VARCHAR},
      </if>
      <if test="idcardUrlb != null">
        IDcard_urlB = #{idcardUrlb,jdbcType=VARCHAR},
      </if>
      <if test="walletEthAddress != null">
        wallet_eth_address = #{walletEthAddress,jdbcType=VARCHAR},
      </if>
      <if test="walletEthPrivatekey != null">
        wallet_eth_privatekey = #{walletEthPrivatekey,jdbcType=VARCHAR},
      </if>
      <if test="walletBtcAddress != null">
        wallet_btc_address = #{walletBtcAddress,jdbcType=VARCHAR},
      </if>
      <if test="walletBtcPrivatekey != null">
        wallet_btc_privateKey = #{walletBtcPrivatekey,jdbcType=VARCHAR},
      </if>
      <if test="walletEosAddress != null">
        wallet_eos_address = #{walletEosAddress,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.seventhree.st.model.User">
    update cbt_user
    set user_name = #{userName,jdbcType=VARCHAR},
      pass_word = #{passWord,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      referer = #{referer,jdbcType=INTEGER},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      mail_num = #{mailNum,jdbcType=VARCHAR},
      IDcard_urlA = #{idcardUrla,jdbcType=VARCHAR},
      IDcard_urlB = #{idcardUrlb,jdbcType=VARCHAR},
      wallet_eth_address = #{walletEthAddress,jdbcType=VARCHAR},
      wallet_eth_privatekey = #{walletEthPrivatekey,jdbcType=VARCHAR},
      wallet_btc_address = #{walletBtcAddress,jdbcType=VARCHAR},
      wallet_btc_privateKey = #{walletBtcPrivatekey,jdbcType=VARCHAR},
      wallet_eos_address = #{walletEosAddress,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

</mapper>